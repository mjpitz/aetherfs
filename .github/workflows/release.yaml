name: Release

on:
  push:
    tags:
      - v*

jobs:
  distribute:
    name: Distribute Binaries and Containers
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Devtools
        run: |
          make docker/devtools

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Registry
        run: echo "${REGISTRY_PASSWORD}" | docker login -u "${REGISTRY_USERNAME}" --password-stdin ghcr.io
        env:
          REGISTRY_USERNAME: ${{ secrets.GHCR_REGISTRY_USER }}
          REGISTRY_PASSWORD: ${{ secrets.GHCR_REGISTRY_PUSH_PASSWORD }}

      - name: Distribute Binaries
        env:
          GITHUB_TOKEN: "${{ secrets.GH_PUSH_TOKEN }}"
        run: |
          VERSION=${GITHUB_REF##*/v} make in-docker TARGETS="dist"

      - name: Distribute Container Image
        run: |
          VERSION=${GITHUB_REF##*/v} make docker/release

  chart:
    name: Publish Chart
    runs-on: ubuntu-latest

    needs:
      - distribute

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Prepare
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

          mkdir .cr-index/
          mkdir .cr-release-packages/

          sudo apt-get install wget

      - name: Install yq
        env:
          VERSION: 4.9.7
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v${VERSION}/yq_linux_amd64 -O ./yq
          chmod +x ./yq
          sudo mv ./yq /usr/bin/yq

      - name: Install chart-releaser
        env:
          VERSION: 1.2.1
        run: |
          wget https://github.com/helm/chart-releaser/releases/download/v${VERSION}/chart-releaser_${VERSION}_linux_amd64.tar.gz -O cr.tgz
          tar zxf cr.tgz cr && rm cr.tgz
          sudo mv ./cr /usr/bin/cr

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.1

      - name: Set Versions
        shell: bash
        run: |
          export VERSION="\"${GITHUB_REF##*/v}\""
          yq e ".version = ${VERSION}" -i ./deply/helm/aetherfs-hub/Chart.yaml
          yq e ".appVersion = ${VERSION}" -i ./deply/helm/aetherfs-hub/Chart.yaml
          yq e ".version = ${VERSION}" -i ./deply/helm/aetherfs/Chart.yaml
          yq e ".appVersion = ${VERSION}" -i ./deply/helm/aetherfs/Chart.yaml
          yq e ".dependencies[0].version = ${VERSION}" -i ./deply/helm/aetherfs/Chart.yaml

      # TODO: Setup GPG signing
      # - name: Prepare GPG key
      #   run: |
      #     gpg_dir=.cr-gpg
      #     mkdir "$gpg_dir"

      #     keyring="$gpg_dir/secring.gpg"
      #     base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring"

      #     passphrase_file="$gpg_dir/passphrase"
      #     echo "$GPG_PASSPHRASE" > "$passphrase_file"

      #     echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV"
      #     echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV"
      #   env:
      #     GPG_KEYRING_BASE64: "${{ secrets.GPG_KEYRING_BASE64 }}"
      #     GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"

      # - name: Add dependency chart repos
      #   run: |
      #     helm repo add bitnami https://charts.bitnami.com/bitnami

      # package and upload manually
      # chart-releaser has some minor headaches when tags already exist at commit.
      - name: Package
        run: |
          cr package deploy/helm/aetherfs-hub
          cr package deploy/helm/aetherfs-datasets
          cr package deploy/helm/aetherfs

      - name: Upload
        uses: softprops/action-gh-release@v1
        with:
          files: |
            .cr-release-packages/*

      - name: Index
        run: |
          cr index
          cp .cr-index/index.yaml docs/index.yaml
          git add docs/index.yaml
          git commit -m "release: charts"
          git push origin HEAD:main
        env:
          CR_TOKEN: "${{ secrets.GH_PUSH_TOKEN }}"
