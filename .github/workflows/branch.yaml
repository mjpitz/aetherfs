name: Branch

on: pull_request

jobs:
  container:
    name: Build and Test Container
    runs-on: ubuntu-latest

    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16.4'

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '^14.18.1'

      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint Golang
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.39
          only-new-issues: false
          skip-go-installation: true

      - name: Lint NodeJS
        run: |
          cd web
          npm install
          npm run lint
          cd ..

      - name: Test
        run: make test

      - name: Distribute
        run: make dist

  chart:
    name: Lint and Test Chart
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.1

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1
        with:
          version: v3.3.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config ct.yaml --check-version-increment=false

      # TODO: turn back on

      # - name: Create kind cluster
      #   uses: helm/kind-action@v1.1.0
      #   if: steps.list-changed.outputs.changed == 'true'

      # - name: Run chart-testing (install)
      #   run: ct install --config ct.yaml
