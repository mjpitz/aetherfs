# Default values for aetherfs-hub.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- The number of instances to run.
replicaCount: 1

image:
  repository: ghcr.io/mjpitz/aetherfs
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created.
  create: true
  # -- Annotations to add to the service account.
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations to provide directly to the pod.
podAnnotations: {}

# -- The security context to provide to the pod.
podSecurityContext: {}
  # fsGroup: 2000

# -- The security context to apply specifically the aetherfs-hub container.
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- The type of service to create.
  type: ClusterIP
  # -- The port to advertise the service on.
  port: 80

ingress:
  # -- Whether to enable an ingress address for the hub.
  enabled: false
  # -- Annotations to add to the ingress class.
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - # -- The name for the service.
      host: chart-example.local
      # -- What paths are exposed.
      paths: []
  # ingress.tls[0].secretName -- The name of the secret containing TLS certificates.
  # ingress.tls[0].hosts -- A list of hosts the TLS certificate is valid for.
  #
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  #
  tls: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  # -- Whether to enable autoscaling for this deployment.
  enabled: false
  # -- The minimum number of replicas to scale down to.
  minReplicas: 1
  # -- The maximum number of replicas to deploy.
  maxReplicas: 100
  # -- What CPU percentage we should scale up at.
  targetCPUUtilizationPercentage: 80
  # autoscaling.targetMemoryUtilizationPercentage -- What Memory percentage we should scale up at.
  # targetMemoryUtilizationPercentage: 80

# -- Limit node selection to nodes with the matching set of labels.
nodeSelector: {}

# -- Configure rules that allow pods to run on tainted nodes. For example, running on control plane nodes.
tolerations: []

# -- Provide scheduling preferences for pods when they are being considered for placement.
affinity: {}

# -- Specify environment variables used to configure other portions of the application.
env: []

nfs:
  # -- Deploys the nfs server.
  enabled: false
